name: sonarqube

services:
  sonarqube:
    image: sonarqube:10-community   # o la versión LTS que prefieras
    container_name: sonarqube
    restart: always
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: sonarqube
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube_db:5432/sonarqube
      # Si prefieres usar la base interna H2 para pruebas rápidas:
      # SONARQUBE_JDBC_URL: jdbc:h2:tcp://localhost:9092/sonarqube;MODE=PostgreSQL
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    depends_on:
      - sonarqube_db
    networks:
      - backend

  sonarqube_db:
    image: postgres:14-alpine
    container_name: sonarqube-db
    restart: always
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - backend

  github_runner:
    build:
      context: ./runner
    container_name: github-runner
    env_file:
      - .env
    environment:
      - RUNNER_NAME
      - RUNNER_REPO
      - RUNNER_TOKEN
      - RUNNER_WORKDIR
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # si el runner debe correr contenedores
    restart: always
    depends_on:
      - sonarqube
    networks:
      - frontend
      - backend

volumes:
  sonarqube_db_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:

networks:
  frontend:
  backend: