name: Multi-module Build & SonarQube Scan (Java 21)

on:
  push:
    branches:
      - master

jobs:
  build-and-analyze:
    runs-on: [ self-hosted ]
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: http://sonarqube:9000

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug SONAR environment
        if: ${{ failure() || always() }}
        run: |
          echo "üîç SONAR_TOKEN   = ${SONAR_TOKEN:0:4}****"
          echo "üîç SONAR_HOST_URL= ${SONAR_HOST_URL}"

      - name: Verify SonarQube connectivity
        # No debemos romper el build si Sonar est√° moment√°neamente abajo
        continue-on-error: true
        run: |
          echo "üîó Probando conexi√≥n a SonarQube‚Ä¶"
          curl --fail -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/server/version"

      - name: Setup JDK 21 & cache Maven
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build & SonarQube analysis
        run: |
          for dir in $(find . -maxdepth 2 -type f -name 'pom.xml' -printf '%h\n'); do
            module=$(basename "$dir")
            key="springcloudcourse-${module}"
            echo "üî® Analizando $module con key $key"
            mvn -f "$dir/pom.xml" clean verify sonar:sonar \
              -Dsonar.login="${SONAR_TOKEN}" \
              -Dsonar.host.url="${SONAR_HOST_URL}" \
              -Dsonar.projectKey="$key" \
              -Dsonar.projectName="$module"
          done
