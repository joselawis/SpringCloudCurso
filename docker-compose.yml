services:
  mysql:
    image: mysql:8.3.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: sasa1234
      MYSQL_DATABASE: db_springboot_cloud
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql

  sonarqube:
    image: sonarqube:10-community   # o la versión LTS que prefieras
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: sonarqube
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube_db:5432/sonarqube
      # Si prefieres usar la base interna H2 para pruebas rápidas:
      # SONARQUBE_JDBC_URL: jdbc:h2:tcp://localhost:9092/sonarqube;MODE=PostgreSQL
    depends_on:
      - sonarqube_db
    restart: unless-stopped
    networks:
      - backend


  sonarqube_db:
    image: postgres:14-alpine
    container_name: sonarqube-db
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

  github_runner:
    build:
      context: ./runner
    container_name: github-runner
    env_file:
      - .env
    environment:
      - RUNNER_NAME
      - RUNNER_REPO
      - RUNNER_TOKEN
      - RUNNER_WORKDIR
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # si el runner debe correr contenedores
    restart: unless-stopped
    depends_on:
      - sonarqube
    networks:
      - frontend
      - backend

  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mem
    ports:
      - 9411:9411

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports: 
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - zipkin

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports: 
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ALLOW_EMBEDDING: "true"

volumes:
  db_data:
  sonarqube_db_data:

networks:
  frontend:
  backend: